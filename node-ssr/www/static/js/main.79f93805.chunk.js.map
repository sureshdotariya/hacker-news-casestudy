{"version":3,"sources":["api/apiUtils.js","components/news-item/news-item.js","components/news-list/news-list.js","pages/homepage/homepage.js","redux/news/news.action.js","api/newsApi.js","components/header/header.js","utils/utils.js","redux/news/news.reducer.js","redux/root-reducer.js","redux/store.js","pages/charts/chartpage.js","App.js","index.js"],"names":["handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","NewsItem","record","upVote","downVote","className","comments","length","votes","href","onClick","id","title","site","author","NewsList","news","props","pageno","recordDisplay","updatePage","slicedNews","slice","Table","striped","bordered","hover","responsive","map","key","mapDispatchToProps","loadNews","dispatch","fetch","then","catch","type","loadNewsSuccess","data","err","accesstype","connect","state","newsList","log","useEffect","Header","to","UpdateVote","InitialState","NewsReducer","action","newsD","RootReducer","combineReducers","middlewares","thunk","logger","reduxImmutableStateInvariant","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","label","value","position","dy","angle","stroke","App","exact","path","component","HomePage","ChartPage","ReactDOM","render","document","getElementById","process"],"mappings":"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","file":"static/js/main.79f93805.chunk.js","sourcesContent":["export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import React from 'react';\nimport './news-item.scss';\n\nconst NewsItem = ({ record, upVote, downVote }) => {\n  return (\n    <tr className='news-item'>\n      <td>{record.comments.length}</td>\n      <td>{record.votes}</td>\n      <td>\n        <div>\n          <a href='#' onClick={() => upVote(record.id)} className='anchor-link'>\n            Up\n          </a>\n        </div>\n        <div>\n          <a\n            href='#'\n            onClick={() => downVote(record.id)}\n            className='anchor-link'\n          >\n            Down\n          </a>\n        </div>\n      </td>\n      <td>\n        {record.title}{' '}\n        <span>\n          ({record.site}) by {record.author}\n        </span>\n      </td>\n    </tr>\n  );\n};\n\nexport default NewsItem;\n","import React from 'react';\nimport './news-list.scss';\nimport Table from 'react-bootstrap/Table';\nimport NewsItem from '../news-item/news-item';\n\nconst NewsList = ({ news, ...props }) => {\n  const { pageno, recordDisplay, updatePage } = props;\n\n  // below code is for pagination\n  let slicedNews = news.slice(\n    (pageno - 1) * recordDisplay,\n    pageno * recordDisplay\n  );\n\n  return (\n    <>\n      <Table striped bordered hover responsive className='news-list'>\n        <thead>\n          <tr>\n            <th>Comments</th>\n            <th>Count</th>\n            <th>Vote</th>\n            <th>News Details</th>\n          </tr>\n        </thead>\n        <tbody>\n          {slicedNews &&\n            slicedNews.map((record) => (\n              <NewsItem key={record.id} record={record} {...props}></NewsItem>\n            ))}\n        </tbody>\n      </Table>\n      <div className='pagination-row'>\n        {pageno !== 1 && (\n          <a\n            href='#'\n            onClick={() => updatePage('prev')}\n            className='anchor-link'\n          >\n            Prev\n          </a>\n        )}\n        {pageno < news.length / recordDisplay && (\n          <a\n            href='#'\n            onClick={() => updatePage('next')}\n            className='anchor-link'\n          >\n            Next\n          </a>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default NewsList;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  loadNews,\n  upVote,\n  downVote,\n  updatePage,\n} from '../../redux/news/news.action';\nimport NewsList from '../../components/news-list/news-list';\nimport './homepage.scss';\nimport PropTypes from 'prop-types';\n\nconst HomePage = ({\n  newsList,\n  pageno,\n  recordDisplay,\n  loadNews,\n  upVote,\n  downVote,\n  updatePage,\n}) => {\n  console.log(newsList);\n\n  useEffect(() => {\n    loadNews();\n  }, []);\n\n  return (\n    <div className='homepage-container'>\n      {newsList && (\n        <NewsList\n          news={newsList}\n          upVote={upVote}\n          downVote={downVote}\n          updatePage={updatePage}\n          pageno={pageno}\n          recordDisplay={recordDisplay}\n        ></NewsList>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    newsList: state.news.data ? state.news.data : [],\n    pageno: state.news.pageno,\n    recordDisplay: state.news.recordDisplay,\n  };\n};\n\nconst mapDispatchToProps = {\n  loadNews,\n  downVote,\n  upVote,\n  updatePage,\n};\n\nHomePage.propTypes = {\n  newsList: PropTypes.array,\n  pageno: PropTypes.number,\n  recordDisplay: PropTypes.number,\n  loadNews: PropTypes.func,\n  upVote: PropTypes.func,\n  downVote: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import * as newsApi from '../../api/newsApi';\n\nexport const NEWS_LIST_SUCCESS = 'NEWS_LIST_SUCCESS';\nexport const NEWS_LIST_ERROR = 'NEWS_LIST_ERROR';\nexport const NEWS_UP_VOTE = 'NEWS_UP_VOTE';\nexport const NEWS_DOWN_VOTE = 'NEWS_DOWN_VOTE';\nexport const NEWS_PAGE_NUM = 'NEWS_PAGE_NUM';\n\nexport const loadNewsSuccess = (news) => {\n  return { type: NEWS_LIST_SUCCESS, news };\n};\n\nexport const loadNewsError = (err) => {\n  return { type: NEWS_LIST_ERROR, err };\n};\n\nexport const upVote = (id) => {\n  return { type: NEWS_UP_VOTE, id };\n};\n\nexport const downVote = (id) => {\n  return { type: NEWS_DOWN_VOTE, id };\n};\n\nexport const updatePage = (accesstype) => {\n  return { type: NEWS_PAGE_NUM, accesstype };\n};\n\nexport function loadNews() {\n  return function (dispatch) {\n    return newsApi\n      .getNews()\n      .then((news) => {\n        dispatch(loadNewsSuccess(news.data));\n      })\n      .catch((error) => {\n        dispatch(loadNewsError(error));\n      });\n  };\n}\n","import { handleResponse, handleError } from './apiUtils';\nconst baseUrl = '/stubs/news.json';\n\nexport function getNews() {\n  return fetch(baseUrl).then(handleResponse).catch(handleError);\n}\n","import React from 'react';\nimport './header.scss';\nimport { Link } from 'react-router-dom';\n\nexport default function Header() {\n  return (\n    <div className='header-container'>\n      <h2>\n        <Link to='/home'> Welcome to Hacker News</Link>\n      </h2>\n      <div className='menu-list'>\n        <div className='menu-item'>\n          <Link to='/home'>Home</Link>\n        </div>\n        <div className='menu-item'>\n          <Link to='/chart'>View Chart</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const UpdateVote = (votes, id, type) => {\n  if (!votes || !id) {\n    return [];\n  }\n  const upVote = type === 'up' ? true : false;\n  const news = votes.map((news) => {\n    if (news.id === id) {\n      return {\n        ...news,\n        votes: upVote ? news.votes + 1 : news.votes - 1,\n      };\n    }\n    return news;\n  });\n\n  return news;\n};\n","import {\n  NEWS_LIST_SUCCESS,\n  NEWS_LIST_ERROR,\n  NEWS_UP_VOTE,\n  NEWS_DOWN_VOTE,\n  NEWS_PAGE_NUM,\n} from './news.action';\n\nimport { UpdateVote } from '../../utils/utils';\n\nconst InitialState = {\n  data: [],\n  error: '',\n  pageno: 1,\n  recordDisplay: 5,\n};\n\nconst NewsReducer = (state = InitialState, action) => {\n  switch (action.type) {\n    case NEWS_LIST_SUCCESS:\n      return {\n        ...state,\n        data: [...action.news],\n      };\n    case NEWS_UP_VOTE:\n      const news = UpdateVote(state.data, action.id, 'up');\n\n      return {\n        ...state,\n        data: [...news],\n      };\n    case NEWS_DOWN_VOTE:\n      const newsD = UpdateVote(state.data, action.id, 'down');\n      return {\n        ...state,\n        data: [...newsD],\n      };\n    case NEWS_PAGE_NUM:\n      return {\n        ...state,\n        pageno:\n          action.accesstype === 'next' ? state.pageno + 1 : state.pageno - 1,\n      };\n    case NEWS_LIST_ERROR:\n      return {\n        ...state,\n        data: [],\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default NewsReducer;\n","import { combineReducers } from 'redux';\nimport NewsReducer from './news/news.reducer';\n\nconst RootReducer = combineReducers({\n  news: NewsReducer,\n});\n\nexport default RootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport RootReducer from './root-reducer';\n\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\n\nconst middlewares = [thunk, logger, reduxImmutableStateInvariant()];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  RootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './chartpage.scss';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport PropTypes from 'prop-types';\n\nconst ChartPage = ({ newsList }) => {\n  console.log(newsList);\n\n  return (\n    <div className='chartpage-container'>\n      <LineChart\n        width={700}\n        height={600}\n        data={newsList}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis\n          dataKey='id'\n          label={{ value: 'ID', position: 'insideBottomCenter', dy: 10 }}\n        />\n        <YAxis\n          label={{\n            value: 'Votes',\n            position: 'insideLeft',\n            angle: -90,\n            dy: -10,\n          }}\n        />\n        <Tooltip />\n        <Line type='monotone' dataKey='votes' stroke='#82ca9d' />\n      </LineChart>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    newsList: state.news.data ? state.news.data : [],\n  };\n};\n\nconst mapDispatchToProps = null;\n\nChartPage.propTypes = {\n  newsList: PropTypes.array,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartPage);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/homepage/homepage';\nimport Header from './components/header/header';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nimport './App.scss';\nimport ChartPage from './pages/charts/chartpage';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header></Header>\n        <Switch>\n          <Route exact path='/' component={HomePage}></Route>\n          <Route path='/home' component={HomePage}></Route>\n          <Route path='/chart' component={ChartPage}></Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nconsole.log(process.env.NODE_ENV);\n"],"sourceRoot":""}